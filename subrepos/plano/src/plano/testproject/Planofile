app.set_default_command("echo", "hello", count=3)

@command
def base_command(app, alpha, beta, omega="x"):
    print("base", alpha, beta, omega)

@command(name="extended-command", parent=base_command)
def extended_command(app, alpha, beta, omega="y"):
    print("extended", alpha, omega)
    extended_command.parent.function(app, alpha, beta, omega)

@command(args=(CommandArgument("message_", help="The message to print", display_name="message"),
               CommandArgument("count", help="Print the message COUNT times"),
               CommandArgument("extra", default=1, short_option="e")))
def echo(app, message_, count=1, extra=None, trouble=False):
    """Print a message to the console"""

    print("Echoing (message={0}, count={1})".format(message_, count))

    if trouble:
        raise Exception("Trouble")

    for i in range(count):
       print(message_)

@command
def haberdash(app, first, *middle, last="bowler"):
    data = [first, *middle, last]
    write_json("haberdash.json", data)

@command(args=(CommandArgument("optional", positional=True),))
def balderdash(app, required, optional="malarkey", other="rubbish"):
    data = [required, optional, other]
    write_json("balderdash.json", data)
